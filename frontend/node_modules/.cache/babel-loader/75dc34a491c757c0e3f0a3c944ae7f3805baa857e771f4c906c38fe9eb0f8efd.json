{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankit\\\\Desktop\\\\d2_sh4\\\\frontend\\\\src\\\\components\\\\Timetable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timetable() {\n  _s();\n  const [scheduled, setScheduled] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const sampleData = {\n    faculties: [{\n      id: 1,\n      name: 'Alice',\n      min_hours_per_week: 0,\n      max_hours_per_week: 20\n    }],\n    sections: [{\n      id: 1,\n      name: 'CSE-A'\n    }],\n    classrooms: [{\n      id: 1,\n      name: 'Room-101'\n    }],\n    class_requirements: [{\n      id: 1,\n      faculty: 1,\n      section: 1,\n      subject: 'Math',\n      class_type: 'THEORY'\n    }],\n    days: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n    periods: [1, 2, 3, 4, 5, 6, 7, 8],\n    period_times: {\n      1: ['10:00', '10:50'],\n      2: ['11:00', '11:50'],\n      3: ['12:00', '12:50'],\n      4: ['13:00', '13:50'],\n      5: ['14:00', '14:50'],\n      6: ['15:00', '15:50'],\n      7: ['16:00', '16:50'],\n      8: ['17:00', '17:50']\n    }\n  };\n  async function runSolver() {\n    setLoading(true); // ✅ missing earlier\n    try {\n      const res = await fetch('http://localhost:5000/api/run-solver', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(sampleData)\n      });\n      if (!res.ok) {\n        throw new Error(`HTTP error! Status: ${res.status}`);\n      }\n      const data = await res.json();\n      if (data.error) {\n        console.error('Solver error:', data.error);\n        alert(`Error: ${data.error}`);\n      } else {\n        setScheduled(data.scheduled); // update UI\n        console.log('Solver status:', data.status);\n      }\n    } catch (err) {\n      console.error('Error running solver:', err);\n      alert(`Network error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runSolver,\n      disabled: loading,\n      children: loading ? 'Generating...' : 'Generate Timetable'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(scheduled, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Timetable, \"UDIbARfjnhPFNtC6bxxiVsZYlsk=\");\n_c = Timetable;\nvar _c;\n$RefreshReg$(_c, \"Timetable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Timetable","_s","scheduled","setScheduled","loading","setLoading","sampleData","faculties","id","name","min_hours_per_week","max_hours_per_week","sections","classrooms","class_requirements","faculty","section","subject","class_type","days","periods","period_times","runSolver","res","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","console","alert","log","err","message","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ankit/Desktop/d2_sh4/frontend/src/components/Timetable.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function Timetable() {\n  const [scheduled, setScheduled] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const sampleData = {\n    faculties: [{ id: 1, name: 'Alice', min_hours_per_week: 0, max_hours_per_week: 20 }],\n    sections: [{ id: 1, name: 'CSE-A' }],\n    classrooms: [{ id: 1, name: 'Room-101' }],\n    class_requirements: [{ id: 1, faculty: 1, section: 1, subject: 'Math', class_type: 'THEORY' }],\n    days: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n    periods: [1, 2, 3, 4, 5, 6, 7, 8],\n    period_times: {\n      1: ['10:00', '10:50'],\n      2: ['11:00', '11:50'],\n      3: ['12:00', '12:50'],\n      4: ['13:00', '13:50'],\n      5: ['14:00', '14:50'],\n      6: ['15:00', '15:50'],\n      7: ['16:00', '16:50'],\n      8: ['17:00', '17:50']\n    }\n  };\n\n  async function runSolver() {\n    setLoading(true); // ✅ missing earlier\n    try {\n      const res = await fetch('http://localhost:5000/api/run-solver', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(sampleData)\n      });\n\n      if (!res.ok) {\n        throw new Error(`HTTP error! Status: ${res.status}`);\n      }\n\n      const data = await res.json();\n      \n      if (data.error) {\n        console.error('Solver error:', data.error);\n        alert(`Error: ${data.error}`);\n      } else {\n        setScheduled(data.scheduled); // update UI\n        console.log('Solver status:', data.status);\n      }\n    } catch (err) {\n      console.error('Error running solver:', err);\n      alert(`Network error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={runSolver} disabled={loading}>\n        {loading ? 'Generating...' : 'Generate Timetable'}\n      </button>\n\n      <pre>{JSON.stringify(scheduled, null, 2)}</pre>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,UAAU,GAAG;IACjBC,SAAS,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,kBAAkB,EAAE,CAAC;MAAEC,kBAAkB,EAAE;IAAG,CAAC,CAAC;IACpFC,QAAQ,EAAE,CAAC;MAAEJ,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IACpCI,UAAU,EAAE,CAAC;MAAEL,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAW,CAAC,CAAC;IACzCK,kBAAkB,EAAE,CAAC;MAAEN,EAAE,EAAE,CAAC;MAAEO,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAS,CAAC,CAAC;IAC9FC,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC;IAC9DC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjCC,YAAY,EAAE;MACZ,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO;IACtB;EACF,CAAC;EAED,eAAeC,SAASA,CAAA,EAAG;IACzBjB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAMkB,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACvB,UAAU;MACjC,CAAC,CAAC;MAEF,IAAI,CAACiB,GAAG,CAACO,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,GAAG,CAACS,MAAM,EAAE,CAAC;MACtD;MAEA,MAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;MAE7B,IAAID,IAAI,CAACE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEF,IAAI,CAACE,KAAK,CAAC;QAC1CE,KAAK,CAAC,UAAUJ,IAAI,CAACE,KAAK,EAAE,CAAC;MAC/B,CAAC,MAAM;QACLhC,YAAY,CAAC8B,IAAI,CAAC/B,SAAS,CAAC,CAAC,CAAC;QAC9BkC,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEL,IAAI,CAACD,MAAM,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZH,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEI,GAAG,CAAC;MAC3CF,KAAK,CAAC,kBAAkBE,GAAG,CAACC,OAAO,EAAE,CAAC;IACxC,CAAC,SAAS;MACRnC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EAEA,oBACEN,OAAA;IAAA0C,QAAA,gBACE1C,OAAA;MAAQ2C,OAAO,EAAEpB,SAAU;MAACqB,QAAQ,EAAEvC,OAAQ;MAAAqC,QAAA,EAC3CrC,OAAO,GAAG,eAAe,GAAG;IAAoB;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEThD,OAAA;MAAA0C,QAAA,EAAMb,IAAI,CAACC,SAAS,CAAC3B,SAAS,EAAE,IAAI,EAAE,CAAC;IAAC;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAAC9C,EAAA,CA9DuBD,SAAS;AAAAgD,EAAA,GAAThD,SAAS;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}